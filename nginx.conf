# auto detects a good number of processes to run
worker_processes auto;

#Provides the configuration file context in which the directives that affect connection processing are specified.
events {
    # Sets the maximum number of simultaneous connections that can be opened by a worker process.
    worker_connections 8000;
    # Tells the worker to accept multiple connections at a time
    multi_accept on;
}


http {
    # what times to include
    include       /etc/nginx/mime.types;
    # what is the default one
    default_type  application/octet-stream;

    # Sets the path, format, and configuration for a buffered log write
    log_format compression '$remote_addr - $remote_user [$time_local] '
        '"$request" $status $upstream_addr '
        '"$http_referer" "$http_user_agent"';
		
	server {
			listen 443 ssl;
			server_name yossi.pw www.yossi.pw;

			ssl_certificate /etc/letsencrypt/live/yossi.pw/fullchain.pem;
			ssl_certificate_key /etc/letsencrypt/live/yossi.pw/privkey.pem;
			
			ssl_session_cache shared:le_nginx_SSL:10m;
			ssl_session_timeout 1440m;
			ssl_session_tickets off;

			ssl_protocols TLSv1.2 TLSv1.3;
			ssl_prefer_server_ciphers off;

			ssl_ciphers "ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA";

			location / {
				# First attempt to serve request as file, then
				# as directory, then fall back to redirecting to index.html
				try_files $uri $uri/ /index.html;
			}
    
			location /api {
				proxy_pass http://be:8081/api;
			}

			root /var/www;
			index index.html index.htm index.nginx-debian.html;
	}
	
	server {
        listen 80;
        listen [::]:80;
		server_name yossi.pw www.yossi.pw;

        location ~ /.well-known/acme-challenge {
          allow all;
          root /var/www/html;
        }

        location / {
                rewrite ^ https://$host$request_uri? permanent;
        }
	}
		
}